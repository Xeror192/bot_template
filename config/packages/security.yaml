security:
    encoders:
        App\Auth\Entity\User:
            algorithm: auto
        App\Auth\Domain\User\Entity\User:
            algorithm: auto
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        jwt:
            entity:
                class: App\Auth\Entity\User
                property: username
        app_user_provider:
            entity:
                class: App\Auth\Domain\User\Entity\User
                property: email.email
    firewalls:
        main:
            pattern: ^/
            anonymous: true
            form_login:
                default_target_path: admin_dashboard_index
                login_path: front_security_login
                check_path: front_security_login
                provider: app_user_provider
            logout:
                path: front_security_logout
        login:
            pattern: ^/login
            anonymous: true
        bot-telegram-callback:
            pattern: ^/bot/telegram/callback
            anonymous: true
        bot-vk-callback:
            pattern: ^/bot/vk/callback
            anonymous: true
        bot-yandex-callback:
            pattern: ^/bot/yandex/callback
            anonymous: true
        auth-logout:
            pattern: ^/api/v1/auth/logout
            anonymous: false
            lazy: true
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            provider: jwt

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/announcement/create, roles: ROLE_USER }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/carsh, roles: IS_AUTHENTICATED_FULLY }

